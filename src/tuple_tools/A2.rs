use crate::tuple_tools::Tuple;
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49) }}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ> Tuple for (A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ) {type Head = A;type Tail = (B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ);fn split_first(self) -> (Self::Head, Self::Tail) { (self.0, (self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51)) }fn construct(h: Self::Head, t: Self::Tail) -> Self { (h, t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50) }}