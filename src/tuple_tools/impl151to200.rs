use crate::tuple_tools::Tuple;
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149)}fn len()->usize{151}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150)}fn len()->usize{152}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151)}fn len()->usize{153}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152)}fn len()->usize{154}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153)}fn len()->usize{155}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154)}fn len()->usize{156}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155)}fn len()->usize{157}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156)}fn len()->usize{158}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157)}fn len()->usize{159}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158)}fn len()->usize{160}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159)}fn len()->usize{161}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160)}fn len()->usize{162}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161)}fn len()->usize{163}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162)}fn len()->usize{164}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163)}fn len()->usize{165}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164)}fn len()->usize{166}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165)}fn len()->usize{167}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166)}fn len()->usize{168}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167)}fn len()->usize{169}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168)}fn len()->usize{170}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169)}fn len()->usize{171}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170)}fn len()->usize{172}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171)}fn len()->usize{173}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172)}fn len()->usize{174}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173)}fn len()->usize{175}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174)}fn len()->usize{176}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175)}fn len()->usize{177}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176)}fn len()->usize{178}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177)}fn len()->usize{179}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178)}fn len()->usize{180}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179)}fn len()->usize{181}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180)}fn len()->usize{182}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181)}fn len()->usize{183}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182)}fn len()->usize{184}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183,self.184))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182,t.183)}fn len()->usize{185}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183,self.184,self.185))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182,t.183,t.184)}fn len()->usize{186}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183,self.184,self.185,self.186))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182,t.183,t.184,t.185)}fn len()->usize{187}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183,self.184,self.185,self.186,self.187))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182,t.183,t.184,t.185,t.186)}fn len()->usize{188}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183,self.184,self.185,self.186,self.187,self.188))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182,t.183,t.184,t.185,t.186,t.187)}fn len()->usize{189}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183,self.184,self.185,self.186,self.187,self.188,self.189))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182,t.183,t.184,t.185,t.186,t.187,t.188)}fn len()->usize{190}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183,self.184,self.185,self.186,self.187,self.188,self.189,self.190))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182,t.183,t.184,t.185,t.186,t.187,t.188,t.189)}fn len()->usize{191}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183,self.184,self.185,self.186,self.187,self.188,self.189,self.190,self.191))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182,t.183,t.184,t.185,t.186,t.187,t.188,t.189,t.190)}fn len()->usize{192}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183,self.184,self.185,self.186,self.187,self.188,self.189,self.190,self.191,self.192))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182,t.183,t.184,t.185,t.186,t.187,t.188,t.189,t.190,t.191)}fn len()->usize{193}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183,self.184,self.185,self.186,self.187,self.188,self.189,self.190,self.191,self.192,self.193))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182,t.183,t.184,t.185,t.186,t.187,t.188,t.189,t.190,t.191,t.192)}fn len()->usize{194}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183,self.184,self.185,self.186,self.187,self.188,self.189,self.190,self.191,self.192,self.193,self.194))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182,t.183,t.184,t.185,t.186,t.187,t.188,t.189,t.190,t.191,t.192,t.193)}fn len()->usize{195}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183,self.184,self.185,self.186,self.187,self.188,self.189,self.190,self.191,self.192,self.193,self.194,self.195))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182,t.183,t.184,t.185,t.186,t.187,t.188,t.189,t.190,t.191,t.192,t.193,t.194)}fn len()->usize{196}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183,self.184,self.185,self.186,self.187,self.188,self.189,self.190,self.191,self.192,self.193,self.194,self.195,self.196))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182,t.183,t.184,t.185,t.186,t.187,t.188,t.189,t.190,t.191,t.192,t.193,t.194,t.195)}fn len()->usize{197}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO,GP,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO,GP){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO,GP);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO,GP);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183,self.184,self.185,self.186,self.187,self.188,self.189,self.190,self.191,self.192,self.193,self.194,self.195,self.196,self.197))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182,t.183,t.184,t.185,t.186,t.187,t.188,t.189,t.190,t.191,t.192,t.193,t.194,t.195,t.196)}fn len()->usize{198}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO,GP,GQ,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO,GP,GQ){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO,GP,GQ);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO,GP,GQ);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183,self.184,self.185,self.186,self.187,self.188,self.189,self.190,self.191,self.192,self.193,self.194,self.195,self.196,self.197,self.198))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182,t.183,t.184,t.185,t.186,t.187,t.188,t.189,t.190,t.191,t.192,t.193,t.194,t.195,t.196,t.197)}fn len()->usize{199}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO,GP,GQ,GR,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO,GP,GQ,GR){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO,GP,GQ,GR);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,DA,DB,DC,DD,DE,DF,DG,DH,DI,DJ,DK,DL,DM,DN,DO,DP,DQ,DR,DS,DT,DU,DV,DW,DX,DY,DZ,EA,EB,EC,ED,EE,EF,EG,EH,EI,EJ,EK,EL,EM,EN,EO,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,FA,FB,FC,FD,FE,FF,FG,FH,FI,FJ,FK,FL,FM,FN,FO,FP,FQ,FR,FS,FT,FU,FV,FW,FX,FY,FZ,GA,GB,GC,GD,GE,GF,GG,GH,GI,GJ,GK,GL,GM,GN,GO,GP,GQ,GR);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99,self.100,self.101,self.102,self.103,self.104,self.105,self.106,self.107,self.108,self.109,self.110,self.111,self.112,self.113,self.114,self.115,self.116,self.117,self.118,self.119,self.120,self.121,self.122,self.123,self.124,self.125,self.126,self.127,self.128,self.129,self.130,self.131,self.132,self.133,self.134,self.135,self.136,self.137,self.138,self.139,self.140,self.141,self.142,self.143,self.144,self.145,self.146,self.147,self.148,self.149,self.150,self.151,self.152,self.153,self.154,self.155,self.156,self.157,self.158,self.159,self.160,self.161,self.162,self.163,self.164,self.165,self.166,self.167,self.168,self.169,self.170,self.171,self.172,self.173,self.174,self.175,self.176,self.177,self.178,self.179,self.180,self.181,self.182,self.183,self.184,self.185,self.186,self.187,self.188,self.189,self.190,self.191,self.192,self.193,self.194,self.195,self.196,self.197,self.198,self.199))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98,t.99,t.100,t.101,t.102,t.103,t.104,t.105,t.106,t.107,t.108,t.109,t.110,t.111,t.112,t.113,t.114,t.115,t.116,t.117,t.118,t.119,t.120,t.121,t.122,t.123,t.124,t.125,t.126,t.127,t.128,t.129,t.130,t.131,t.132,t.133,t.134,t.135,t.136,t.137,t.138,t.139,t.140,t.141,t.142,t.143,t.144,t.145,t.146,t.147,t.148,t.149,t.150,t.151,t.152,t.153,t.154,t.155,t.156,t.157,t.158,t.159,t.160,t.161,t.162,t.163,t.164,t.165,t.166,t.167,t.168,t.169,t.170,t.171,t.172,t.173,t.174,t.175,t.176,t.177,t.178,t.179,t.180,t.181,t.182,t.183,t.184,t.185,t.186,t.187,t.188,t.189,t.190,t.191,t.192,t.193,t.194,t.195,t.196,t.197,t.198)}fn len()->usize{200}}