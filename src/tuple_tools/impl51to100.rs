use crate::tuple_tools::Tuple;
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49)}fn len()->usize{51}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50)}fn len()->usize{52}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51)}fn len()->usize{53}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52)}fn len()->usize{54}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53)}fn len()->usize{55}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54)}fn len()->usize{56}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55)}fn len()->usize{57}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56)}fn len()->usize{58}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57)}fn len()->usize{59}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58)}fn len()->usize{60}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59)}fn len()->usize{61}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60)}fn len()->usize{62}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61)}fn len()->usize{63}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62)}fn len()->usize{64}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63)}fn len()->usize{65}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64)}fn len()->usize{66}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65)}fn len()->usize{67}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66)}fn len()->usize{68}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67)}fn len()->usize{69}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68)}fn len()->usize{70}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69)}fn len()->usize{71}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70)}fn len()->usize{72}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71)}fn len()->usize{73}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72)}fn len()->usize{74}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73)}fn len()->usize{75}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74)}fn len()->usize{76}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75)}fn len()->usize{77}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76)}fn len()->usize{78}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77)}fn len()->usize{79}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78)}fn len()->usize{80}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79)}fn len()->usize{81}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80)}fn len()->usize{82}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81)}fn len()->usize{83}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82)}fn len()->usize{84}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83)}fn len()->usize{85}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84)}fn len()->usize{86}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85)}fn len()->usize{87}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86)}fn len()->usize{88}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87)}fn len()->usize{89}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88)}fn len()->usize{90}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89)}fn len()->usize{91}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90)}fn len()->usize{92}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91)}fn len()->usize{93}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92)}fn len()->usize{94}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93)}fn len()->usize{95}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94)}fn len()->usize{96}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95)}fn len()->usize{97}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96)}fn len()->usize{98}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97)}fn len()->usize{99}}
impl<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,Aug>Tuple<Aug>for(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV){type Head=A;type Tail=(B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV);type Augmented=(Aug,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,AB,AC,AD,AE,AF,AG,AH,AI,AJ,AK,AL,AM,AN,AO,AP,AQ,AR,AS,AT,AU,AV,AW,AX,AY,AZ,BA,BB,BC,BD,BE,BF,BG,BH,BI,BJ,BK,BL,BM,BN,BO,BP,BQ,BR,BS,BT,BU,BV,BW,BX,BY,BZ,CA,CB,CC,CD,CE,CF,CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV);fn split_first(self)->(Self::Head,Self::Tail){(self.0,(self.1,self.2,self.3,self.4,self.5,self.6,self.7,self.8,self.9,self.10,self.11,self.12,self.13,self.14,self.15,self.16,self.17,self.18,self.19,self.20,self.21,self.22,self.23,self.24,self.25,self.26,self.27,self.28,self.29,self.30,self.31,self.32,self.33,self.34,self.35,self.36,self.37,self.38,self.39,self.40,self.41,self.42,self.43,self.44,self.45,self.46,self.47,self.48,self.49,self.50,self.51,self.52,self.53,self.54,self.55,self.56,self.57,self.58,self.59,self.60,self.61,self.62,self.63,self.64,self.65,self.66,self.67,self.68,self.69,self.70,self.71,self.72,self.73,self.74,self.75,self.76,self.77,self.78,self.79,self.80,self.81,self.82,self.83,self.84,self.85,self.86,self.87,self.88,self.89,self.90,self.91,self.92,self.93,self.94,self.95,self.96,self.97,self.98,self.99))}fn construct(h:Self::Head,t:Self::Tail)->Self{(h,t.0,t.1,t.2,t.3,t.4,t.5,t.6,t.7,t.8,t.9,t.10,t.11,t.12,t.13,t.14,t.15,t.16,t.17,t.18,t.19,t.20,t.21,t.22,t.23,t.24,t.25,t.26,t.27,t.28,t.29,t.30,t.31,t.32,t.33,t.34,t.35,t.36,t.37,t.38,t.39,t.40,t.41,t.42,t.43,t.44,t.45,t.46,t.47,t.48,t.49,t.50,t.51,t.52,t.53,t.54,t.55,t.56,t.57,t.58,t.59,t.60,t.61,t.62,t.63,t.64,t.65,t.66,t.67,t.68,t.69,t.70,t.71,t.72,t.73,t.74,t.75,t.76,t.77,t.78,t.79,t.80,t.81,t.82,t.83,t.84,t.85,t.86,t.87,t.88,t.89,t.90,t.91,t.92,t.93,t.94,t.95,t.96,t.97,t.98)}fn len()->usize{100}}